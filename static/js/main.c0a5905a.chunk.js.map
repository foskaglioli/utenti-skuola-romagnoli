{"version":3,"sources":["Componenti/Table.js","Componenti/icons/logo_skuola.PNG","Componenti/Header.js","Componenti/Form.js","index.js"],"names":["Table","props","array_utenti","Object","keys","localStorage","forEach","key","item","JSON","parse","getItem","push","state","utenti","cs_cognome","cs_nome","cs_data_nascita","cs_email","onSort","bind","event","ordinaPer","data","this","sort","a","b","localeCompare","setState","className","onClick","e","getNumeroUtenti","email_str","rimuoviUtenteByMail","email","removeItem","window","location","reload","numero_utenti","map","utente","index","cognome","nome","data_nascita","data_nascita_visualizzata","format","Date","cognome_visualizzato","length","substring","nome_visualizzato","alt","title","textValues","showTimer","gestisciRimozione","id","creaHeader","creaRighe","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Header","classes","AppBar","position","style","textAlign","background","Toolbar","src","logo","Form","alertBello","useAlert","useForm","register","handleSubmit","checkDatiForm","obj","esito","controlla_campi_obbligatori","checkCampiObl","controlla_mail","checkMail","controlla_data_nascita","checkDataNascita","esito_campi_obl","esito_mail","sintassiEmail","getUserObjectByEmail","test","String","toLowerCase","dt_nascita_str","esito_dtn","esito_validate_date","validatedate","etaByDate","data_str","esito_validate","data_ita","split","data_db","esito_coerenza","coerenzaData","giorno","mese","anno","esito_coerenza_dt","toString","parseInt","getDate","oggi","dataNascita","eta","getFullYear","m","getMonth","inserisciUtente","beautifyName","data_tmp","setItem","stringify","str","array_str","arr_str_beauty","str_tmp","charAt","toUpperCase","slice","join","onSubmit","esito_dati","msg","error","color","backgroundColor","borderRadius","paddingTop","paddingLeft","paddingRight","paddingBottom","fontSize","fontFamily","required","autoFocus","type","name","aria-label","ref","placeholder","aria-describedby","ReactDOM","render","template","message","options","close","timeout","offset","transition","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0a5905a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Table.css';\r\nimport { format } from \"date-fns\";\r\nimport InlineConfirmButton from \"react-inline-confirm\";\r\n\r\nexport default class Table extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      //Popolo l'array_utenti, prendendo dati dal localStorage da utilizzare come come stato iniziale della tabella\r\n      let array_utenti = [];\r\n      Object.keys(localStorage).forEach(function(key){\r\n         var item =JSON.parse(localStorage.getItem(key));\r\n         array_utenti.push(item);\r\n      });\r\n      this.state = { utenti: array_utenti, cs_cognome:'desc', cs_nome:'desc', cs_data_nascita:'desc', cs_email:'desc' };\r\n      this.onSort = this.onSort.bind(this);\r\n   }\r\n   onSort(event, ordinaPer){\r\n      const data = this.state.utenti;\r\n      switch (ordinaPer) {\r\n        case \"cognome\":\r\n          if(this.state.cs_cognome === 'asc'){\r\n            data.sort((a,b) => a[ordinaPer].localeCompare(b[ordinaPer]));\r\n          }else{\r\n            data.sort((a,b) => b[ordinaPer].localeCompare(a[ordinaPer]));\r\n          }\r\n          this.setState({utenti:data, cs_cognome: this.state.cs_cognome === 'desc' ? 'asc':'desc'});\r\n          break;\r\n        case \"nome\":\r\n          if(this.state.cs_nome === 'asc'){\r\n            data.sort((a,b) => a[ordinaPer].localeCompare(b[ordinaPer]));\r\n          }else{\r\n            data.sort((a,b) => b[ordinaPer].localeCompare(a[ordinaPer]));\r\n          }\r\n          this.setState({utenti:data, cs_nome: this.state.cs_nome === 'desc' ? 'asc':'desc'});\r\n          break;\r\n        case \"data_nascita\":\r\n          if(this.state.cs_data_nascita === 'asc'){\r\n            data.sort((a,b) => a[ordinaPer].localeCompare(b[ordinaPer]));\r\n          }else{\r\n            data.sort((a,b) => b[ordinaPer].localeCompare(a[ordinaPer]));\r\n          }\r\n          this.setState({utenti:data, cs_data_nascita: this.state.cs_data_nascita === 'desc' ? 'asc':'desc'});\r\n          break;\r\n        case \"email\":\r\n          if(this.state.cs_email === 'asc'){\r\n            data.sort((a,b) => a[ordinaPer].localeCompare(b[ordinaPer]));\r\n          }else{\r\n            data.sort((a,b) => b[ordinaPer].localeCompare(a[ordinaPer]));\r\n          }\r\n          this.setState({utenti:data, cs_email: this.state.cs_email === 'desc' ? 'asc':'desc'});\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n   }\r\n   creaHeader() {\r\n      return (\r\n        <tr >\r\n           <th className=\"pointer utenti_th tabella\" onClick={e => this.onSort(e, 'cognome')}>Cognome</th>\r\n           <th className=\"pointer utenti_th tabella\" onClick={e => this.onSort(e, 'nome')}>Nome</th>\r\n           <th className=\"pointer utenti_th tabella\" onClick={e => this.onSort(e, 'data_nascita')}>Data di nascita</th>\r\n           <th className=\"pointer utenti_th tabella\" onClick={e => this.onSort(e, 'email')}>E-mail</th>\r\n           <th className=\"utenti_th\">Totale utenti: {this.getNumeroUtenti()}</th>\r\n        </tr>\r\n      );\r\n   }\r\n   gestisciRimozione(email_str){\r\n    this.rimuoviUtenteByMail(email_str);\r\n   }\r\n   rimuoviUtenteByMail(email_str){\r\n     //Rimuovo dallo storage l'utente con quella email\r\n     Object.keys(localStorage).forEach(function(key){\r\n        var item =JSON.parse(localStorage.getItem(key));\r\n        if(item.email===email_str){\r\n          localStorage.removeItem(email_str);\r\n        }\r\n     });\r\n     window.location.reload();\r\n   }\r\n   getNumeroUtenti(){\r\n     let numero_utenti=0;\r\n     Object.keys(localStorage).forEach(function(key){\r\n        numero_utenti++;\r\n     });\r\n     return numero_utenti;\r\n   }\r\n   creaRighe() {\r\n      return this.state.utenti.map((utente, index) => {\r\n         const { cognome, nome, data_nascita, email } = utente;\r\n         const textValues = [\"Rimuovi utente\", \"Confermare?\", \"Sto cancellando...\"];\r\n         let data_nascita_visualizzata = format(new Date(data_nascita),\"dd/MM/yyyy\");\r\n         let cognome_visualizzato = cognome.length > 38 ? cognome.substring(0, 35)+\"...\" : cognome;\r\n         let nome_visualizzato = cognome.length > 38 ? cognome.substring(0, 35)+\"...\" : cognome;\r\n         return (\r\n            <tr key={email} className=\"righe_tabella\">\r\n               <td alt={cognome} title={cognome} className=\"tabella\">{cognome_visualizzato}</td>\r\n               <td alt={nome} title={nome} className=\"tabella\">{nome_visualizzato}</td>\r\n               <td className=\"tabella\">{data_nascita_visualizzata}</td>\r\n               <td alt={email} title={email} className=\"tabella\">{email}</td>\r\n               <td className=\"tabella\"><InlineConfirmButton className=\"btn btn-default pulsanteCancella\" textValues={textValues} showTimer onClick={() => this.gestisciRimozione(email)}>\r\n              \t</InlineConfirmButton></td>\r\n            </tr>\r\n         )\r\n      })\r\n   }\r\n   render() {\r\n      return (\r\n         <div id=\"container_table\">\r\n            <table id='utenti'>\r\n               <tbody>\r\n                  {this.creaHeader()}\r\n                  {this.creaRighe()}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo_skuola.a799d43e.PNG\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport logo from './icons/logo_skuola.PNG';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ textAlign: 'right', background: '#007dc3'}} >\r\n        <Toolbar>\r\n          <img src={logo} alt=\"Logo\" />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useForm  } from \"react-hook-form\";\r\nimport './Form.css';\r\nimport { useAlert } from 'react-alert';\r\n\r\nexport default function Form() {\r\n  const alertBello = useAlert();\r\n  const {register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    let esito_dati = checkDatiForm(data);\r\n    if(esito_dati[\"ok\"]){\r\n      inserisciUtente(data);\r\n    }else{\r\n      let msg = esito_dati[\"errore\"];\r\n      alertBello.error(<div style={{\r\n         color: '#007dc3',\r\n         backgroundColor: '#FEE300',\r\n         borderRadius: '6px 6px 6px 6px',\r\n         paddingTop: \"5px\",\r\n         paddingLeft: \"7px\",\r\n         paddingRight: \"7px\",\r\n         paddingBottom: \"1px\",\r\n         fontSize: '18px',\r\n         fontFamily: 'Verdana'\r\n        }\r\n       }>{msg}</div>);\r\n    }\r\n  }\r\n\r\n  const checkDatiForm = (obj) => {\r\n    let esito = [];\r\n    esito[\"ok\"]=true;\r\n    esito[\"errore\"]=\"\";\r\n\r\n    //Controllo la lunghezza di tuti i parametri inseriti\r\n    for (const key of Object.keys(obj)) {\r\n      if(typeof(obj[key]) === 'string' && obj[key].length > 255){\r\n        esito[\"ok\"]=false;\r\n        esito[\"errore\"]=\"Tutti i campi devono avere la lunghezza massima di 255 caratteri\";\r\n        return esito;\r\n      }\r\n    }\r\n\r\n    //Controllo tutti i campi obbligatori, nel caso in cui il required non dovesse funzionare\r\n    let controlla_campi_obbligatori= checkCampiObl(obj);\r\n    if(!controlla_campi_obbligatori[\"ok\"]){\r\n      esito[\"ok\"]=false;\r\n      esito[\"errore\"]=controlla_campi_obbligatori[\"errore\"];\r\n      return esito;\r\n    }\r\n\r\n    //Le email devono rispettare la sintassi classica e non devono essere già presenti\r\n    let controlla_mail = checkMail(obj.email);\r\n    if(!controlla_mail[\"ok\"]){\r\n      esito[\"ok\"]=false;\r\n      esito[\"errore\"]=controlla_mail[\"errore\"];\r\n      return esito;\r\n    }\r\n\r\n    //Le date devono rispettare la sintassi classica e devono essere date di nascita di persone maggiorenni\r\n    let controlla_data_nascita = checkDataNascita(obj.data_nascita);\r\n    if(!controlla_data_nascita[\"ok\"]){\r\n      esito[\"ok\"]=false;\r\n      esito[\"errore\"]=controlla_data_nascita[\"errore\"];\r\n      return esito;\r\n    }\r\n\r\n    return esito;\r\n  }\r\n\r\n  const checkCampiObl = (obj) => {\r\n    let esito_campi_obl = [];\r\n    esito_campi_obl[\"ok\"]=true;\r\n    esito_campi_obl[\"errore\"]=\"\";\r\n    if(!obj.cognome){\r\n      esito_campi_obl[\"ok\"]=false;\r\n      esito_campi_obl[\"errore\"]=\"Il campo 'Cognome' è obbligatorio\";\r\n      return esito_campi_obl;\r\n    }else if(!obj.nome){\r\n      esito_campi_obl[\"ok\"]=false;\r\n      esito_campi_obl[\"errore\"]=\"Il campo 'Nome' è obbligatorio\";\r\n      return esito_campi_obl;\r\n    }else if(!obj.data_nascita){\r\n      esito_campi_obl[\"ok\"]=false;\r\n      esito_campi_obl[\"errore\"]=\"Il campo 'Data di nascita' è obbligatorio\";\r\n      return esito_campi_obl;\r\n    }else if(!obj.email){\r\n      esito_campi_obl[\"ok\"]=false;\r\n      esito_campi_obl[\"errore\"]=\"Il campo 'E-mail' è obbligatorio\";\r\n      return esito_campi_obl;\r\n    }\r\n\r\n    return esito_campi_obl;\r\n  }\r\n\r\n  const checkMail = (email_str) => {\r\n    let esito_mail = [];\r\n    esito_mail[\"ok\"]=true;\r\n    esito_mail[\"errore\"]=\"\";\r\n\r\n    if(!email_str){\r\n      esito_mail[\"ok\"]=false;\r\n      esito_mail[\"errore\"]=\"Il campo email è obbligatorio\";\r\n      return esito_mail;\r\n    }\r\n\r\n    if(!sintassiEmail(email_str)){\r\n      esito_mail[\"ok\"]=false;\r\n      esito_mail[\"errore\"]=\"Il campo email deve rispettare la sintassi: esempio@mail.com \";\r\n      return esito_mail;\r\n    }\r\n\r\n    //Controllo che non ci sia un altro utente con quella email\r\n    if(getUserObjectByEmail(email_str)){\r\n     esito_mail[\"ok\"]=false;\r\n     esito_mail[\"errore\"]=\"Indirizzo email già registrato\";\r\n     return esito_mail;\r\n    }\r\n\r\n    return esito_mail;\r\n  }\r\n\r\n  const sintassiEmail = (email) => {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  const getUserObjectByEmail = (email_str) => {\r\n    return JSON.parse(localStorage.getItem(email_str));\r\n  }\r\n\r\n  const checkDataNascita = (dt_nascita_str) =>{\r\n    let esito_dtn = [];\r\n    esito_dtn[\"ok\"]=true;\r\n    esito_dtn[\"errore\"]=\"\";\r\n    //Controllo che sia del formato giusto\r\n    let esito_validate_date = validatedate(dt_nascita_str);\r\n    if(!esito_validate_date[\"ok\"]){\r\n      esito_dtn[\"ok\"]=false;\r\n      esito_dtn[\"errore\"]=esito_validate_date[\"errore\"];\r\n      return esito_dtn;\r\n    }\r\n    //Controllo che sia maggiorenne\r\n    if(etaByDate(dt_nascita_str) < 18){\r\n      esito_dtn[\"ok\"]=false;\r\n      esito_dtn[\"errore\"]=\"Non è possibile registrare un utente minorenne\";\r\n      return esito_dtn;\r\n    }\r\n    return esito_dtn;\r\n  }\r\n\r\n  const validatedate = (data_str) =>{\r\n    let esito_validate = [];\r\n    esito_validate[\"ok\"] = true;\r\n    esito_validate[\"errore\"] = \"\";\r\n\r\n\r\n    let data_ita = data_str.split('/');\r\n    let data_db = data_str.split('-');\r\n    let esito_coerenza = null;\r\n    if (data_ita.length>1){\r\n      esito_coerenza = coerenzaData(data_ita[0],data_ita[1],data_ita[2]);\r\n    }else if (data_db.length>1){\r\n      esito_coerenza = coerenzaData(data_db[2],data_db[1],data_db[0]);\r\n    }else{\r\n      esito_validate[\"ok\"]=false;\r\n      esito_validate[\"errore\"] = \"Data inserita in un formato non valido (es. data corretta: 01/01/2020)\";\r\n      return esito_validate;\r\n    }\r\n\r\n    if(!esito_coerenza[\"ok\"]){\r\n      esito_validate[\"ok\"] = esito_coerenza[\"ok\"];\r\n      esito_validate[\"errore\"] = esito_coerenza[\"errore\"];\r\n    }\r\n\r\n    return esito_validate;\r\n\r\n\r\n  }\r\n\r\n  const coerenzaData = (giorno,mese,anno) => {\r\n    let esito_coerenza_dt = [];\r\n    esito_coerenza_dt[\"ok\"]=true;\r\n    esito_coerenza_dt[\"errore\"]=\"\";\r\n    //Controllo che giorno, mese ed anno siano di lunghezze e valori accettabili\r\n    if(giorno.toString().length !== 2 || parseInt(giorno) > 31 || parseInt(giorno) < 1){\r\n      esito_coerenza_dt[\"ok\"]=false;\r\n      esito_coerenza_dt[\"errore\"]=\"Il giorno inserito non è possibile\";\r\n      return esito_coerenza_dt;\r\n    }else if (mese.toString().length !== 2 || parseInt(mese) > 12 || parseInt(mese) < 1) {\r\n      esito_coerenza_dt[\"ok\"]=false;\r\n      esito_coerenza_dt[\"errore\"]=\"Il mesi inserito non è possibile\";\r\n      return esito_coerenza_dt;\r\n    }else if(anno.toString().length !== 4 || parseInt(anno) === 0 || parseInt(anno) < 1850 ){\r\n      esito_coerenza_dt[\"ok\"]=false;\r\n      esito_coerenza_dt[\"errore\"]=\"L'anno inserito non è possibile\";\r\n      return esito_coerenza_dt;\r\n    }\r\n    //Controllo che non inseriscano giorni di nascita impossibili, ad esempio 31 Giugno 20xx\r\n    if(parseInt(new Date(anno, mese, 0).getDate()) < parseInt(giorno)){\r\n      esito_coerenza_dt[\"ok\"]=false;\r\n      esito_coerenza_dt[\"errore\"]=\"Il giorno inserito non è possibile per il mese dell'anno inserito \";\r\n      return esito_coerenza_dt;\r\n    }\r\n    return esito_coerenza_dt;\r\n  }\r\n\r\n  const etaByDate = (data_nascita) => {\r\n      let oggi = new Date();\r\n      let dataNascita = new Date(data_nascita);\r\n      let eta = oggi.getFullYear() - dataNascita.getFullYear();\r\n      var m = oggi.getMonth() - dataNascita.getMonth();\r\n      if (m < 0 || (m === 0 && oggi.getDate() < dataNascita.getDate())) {\r\n          eta--;\r\n      }\r\n      return eta;\r\n  }\r\n\r\n  const inserisciUtente = (data) =>{\r\n    //Salvo i dati nome e cognome nel formato Cognome Nome\r\n    data.cognome = beautifyName(data.cognome);\r\n    data.nome = beautifyName(data.nome);\r\n    //Salvo le date nel formato yyyy-mm-dd, convertendole se necessario\r\n    let data_tmp = data.data_nascita.split('/');\r\n    data.data_nascita = data_tmp.length>1 ? data_tmp[2]+\"-\"+data_tmp[1]+\"-\"+data_tmp[0] : data.data_nascita;\r\n    //Salvo tutto nello storage e poi ricarico la pagina\r\n    localStorage.setItem(data.email, JSON.stringify(data));\r\n    window.location.reload();\r\n  }\r\n\r\n  const beautifyName = (str) => {\r\n    //Vedo se è un nome/cognome fatto di più parole\r\n    let array_str = str.split(' ');\r\n    if(array_str.length > 1){\r\n      let arr_str_beauty = [];\r\n      array_str.forEach(function (str_tmp) {\r\n        arr_str_beauty.push(str_tmp.charAt(0).toUpperCase() + str_tmp.slice(1).toLowerCase())\r\n      });\r\n      return arr_str_beauty.join(' ');\r\n    }else{\r\n      return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"div_form_utenti\">\r\n      <span className=\"add_utente\" >Aggiungi utente</span>\r\n      <form className=\"form-inline form_utenti\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group campi_form_utenti\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Cognome</span>\r\n          </div>\r\n          <input required autoFocus type=\"text\" className=\"form-control testo_form\" id=\"cognome\" name=\"cognome\" aria-label=\"Cognome\" ref={register} />\r\n        </div>\r\n        <div className=\"form-group campi_form_utenti\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Nome</span>\r\n          </div>\r\n          <input required type=\"text\" className=\"form-control testo_form\" id=\"nome\" name=\"nome\" aria-label=\"Nome\" ref={register} />\r\n        </div>\r\n        <div className=\"input-group campi_form_utenti\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Data di nascita</span>\r\n          </div>\r\n          <input required type=\"date\" className=\"form-control testo_form\" placeholder=\"gg/mm/aaaa\" id=\"data_nascita\" name=\"data_nascita\" aria-label=\"Data di nascita\"  ref={register} />\r\n        </div>\r\n        <div className=\"form-group campi_form_utenti\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">E-mail</span>\r\n          </div>\r\n          <input required type=\"email\" className=\"form-control testo_form\" id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" aria-label=\"E-mail\" ref={register} />\r\n        </div>\r\n        <div className=\"form-group campi_form_utenti\">\r\n          <button  type=\"submit\" className=\"btn btn-primary\" >SALVA</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Table from './Componenti/Table';\nimport Header from './Componenti/Header';\nimport Form from './Componenti/Form';\nimport { Provider as AlertProvider } from 'react-alert';\n//import AlertTemplate from 'react-alert-template-basic';\n\n\nconst options = {\n  position: 'top right',\n  timeout: 6000,\n  offset: '30px',\n  transition: 'fade'\n};\n\nconst AlertTemplate = ({ style, options, message, close }) => (\n  <div style={style}>\n    {message}\n  </div>\n)\n\nReactDOM.render(\n  <AlertProvider template={AlertTemplate} {...options}>\n    <React.StrictMode>\n        <Header />\n        <Form />\n        <Table />\n    </React.StrictMode>\n  </AlertProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}