{"version":3,"sources":["Componenti/icons/logo_skuola.PNG","Componenti/Header.js","Componenti/Form.js","Componenti/Table.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","classes","className","AppBar","position","style","textAlign","background","Toolbar","src","logo","alt","Form","alertBello","useAlert","useForm","register","handleSubmit","checkDatiForm","obj","esito","Object","keys","key","length","controlla_campi_obbligatori","checkCampiObl","controlla_mail","checkMail","email","controlla_data_nascita","checkDataNascita","data_nascita","esito_campi_obl","cognome","nome","email_str","esito_mail","sintassiEmail","getUserObjectByEmail","test","String","toLowerCase","JSON","parse","localStorage","getItem","dt_nascita_str","esito_dtn","esito_validate_date","validatedate","etaByDate","data_str","esito_validate","data_ita","split","data_db","esito_coerenza","coerenzaData","giorno","mese","anno","esito_coerenza_dt","toString","parseInt","Date","getDate","oggi","dataNascita","eta","getFullYear","m","getMonth","inserisciUtente","data","beautifyName","data_tmp","setItem","stringify","window","location","reload","str","array_str","arr_str_beauty","forEach","str_tmp","push","charAt","toUpperCase","slice","join","id","onSubmit","esito_dati","msg","error","color","backgroundColor","borderRadius","paddingTop","paddingLeft","paddingRight","paddingBottom","fontSize","fontFamily","required","autoFocus","type","name","aria-label","ref","placeholder","aria-describedby","Table","array_utenti","item","state","utenti","cs_cognome","cs_nome","cs_data_nascita","cs_email","onSort","bind","event","ordinaPer","this","sort","a","b","localeCompare","setState","onClick","e","getNumeroUtenti","rimuoviUtenteByMail","removeItem","numero_utenti","map","utente","index","data_nascita_visualizzata","format","cognome_visualizzato","substring","nome_visualizzato","textValues","isExecuting","showTimer","gestisciRimozione","rows","creaHeader","creaRighe","Component","ReactDOM","render","template","message","options","close","timeout","offset","transition","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9e4ce5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_skuola.a799d43e.PNG\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport logo from './icons/logo_skuola.PNG';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ textAlign: 'right', background: '#007dc3'}} >\r\n        <Toolbar>\r\n          <img src={logo} alt=\"Logo\" />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useForm  } from \"react-hook-form\";\r\nimport './Form.css';\r\nimport { useAlert } from 'react-alert';\r\n\r\nexport default function Form() {\r\n  const alertBello = useAlert();\r\n  const {register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    let esito_dati = checkDatiForm(data);\r\n    if(esito_dati[\"ok\"]){\r\n      inserisciUtente(data);\r\n    }else{\r\n      let msg = esito_dati[\"errore\"];\r\n      alertBello.error(<div style={{\r\n         color: '#007dc3',\r\n         backgroundColor: '#FEE300',\r\n         borderRadius: '6px 6px 6px 6px',\r\n         paddingTop: \"5px\",\r\n         paddingLeft: \"7px\",\r\n         paddingRight: \"7px\",\r\n         paddingBottom: \"1px\",\r\n         fontSize: '18px',\r\n         fontFamily: 'Verdana'\r\n        }\r\n       }>{msg}</div>);\r\n    }\r\n  }\r\n\r\n  const checkDatiForm = (obj) => {\r\n    let esito = [];\r\n    esito[\"ok\"]=true;\r\n    esito[\"errore\"]=\"\";\r\n\r\n    //Controllo la lunghezza di tuti i parametri inseriti\r\n    for (const key of Object.keys(obj)) {\r\n      if(typeof(obj[key]) === 'string' && obj[key].length > 255){\r\n        esito[\"ok\"]=false;\r\n        esito[\"errore\"]=\"Tutti i campi devono avere la lunghezza massima di 255 caratteri\";\r\n        return esito;\r\n      }\r\n    }\r\n\r\n    //Controllo tutti i campi obbligatori, nel caso in cui il required non dovesse funzionare\r\n    let controlla_campi_obbligatori= checkCampiObl(obj);\r\n    if(!controlla_campi_obbligatori[\"ok\"]){\r\n      esito[\"ok\"]=false;\r\n      esito[\"errore\"]=controlla_campi_obbligatori[\"errore\"];\r\n      return esito;\r\n    }\r\n\r\n    //Le email devono rispettare la sintassi classica e non devono essere già presenti\r\n    let controlla_mail = checkMail(obj.email);\r\n    if(!controlla_mail[\"ok\"]){\r\n      esito[\"ok\"]=false;\r\n      esito[\"errore\"]=controlla_mail[\"errore\"];\r\n      return esito;\r\n    }\r\n\r\n    //Le date devono rispettare la sintassi classica e devono essere date di nascita di persone maggiorenni\r\n    let controlla_data_nascita = checkDataNascita(obj.data_nascita);\r\n    if(!controlla_data_nascita[\"ok\"]){\r\n      esito[\"ok\"]=false;\r\n      esito[\"errore\"]=controlla_data_nascita[\"errore\"];\r\n      return esito;\r\n    }\r\n\r\n    return esito;\r\n  }\r\n\r\n  const checkCampiObl = (obj) => {\r\n    let esito_campi_obl = [];\r\n    esito_campi_obl[\"ok\"]=true;\r\n    esito_campi_obl[\"errore\"]=\"\";\r\n    if(!obj.cognome){\r\n      esito_campi_obl[\"ok\"]=false;\r\n      esito_campi_obl[\"errore\"]=\"Il campo 'Cognome' è obbligatorio\";\r\n      return esito_campi_obl;\r\n    }else if(!obj.nome){\r\n      esito_campi_obl[\"ok\"]=false;\r\n      esito_campi_obl[\"errore\"]=\"Il campo 'Nome' è obbligatorio\";\r\n      return esito_campi_obl;\r\n    }else if(!obj.data_nascita){\r\n      esito_campi_obl[\"ok\"]=false;\r\n      esito_campi_obl[\"errore\"]=\"Il campo 'Data di nascita' è obbligatorio\";\r\n      return esito_campi_obl;\r\n    }else if(!obj.email){\r\n      esito_campi_obl[\"ok\"]=false;\r\n      esito_campi_obl[\"errore\"]=\"Il campo 'E-mail' è obbligatorio\";\r\n      return esito_campi_obl;\r\n    }\r\n\r\n    return esito_campi_obl;\r\n  }\r\n\r\n  const checkMail = (email_str) => {\r\n    let esito_mail = [];\r\n    esito_mail[\"ok\"]=true;\r\n    esito_mail[\"errore\"]=\"\";\r\n\r\n    if(!email_str){\r\n      esito_mail[\"ok\"]=false;\r\n      esito_mail[\"errore\"]=\"Il campo email è obbligatorio\";\r\n      return esito_mail;\r\n    }\r\n\r\n    if(!sintassiEmail(email_str)){\r\n      esito_mail[\"ok\"]=false;\r\n      esito_mail[\"errore\"]=\"Il campo email deve rispettare la sintassi: esempio@mail.com \";\r\n      return esito_mail;\r\n    }\r\n\r\n    //Controllo che non ci sia un altro utente con quella email\r\n    if(getUserObjectByEmail(email_str)){\r\n     esito_mail[\"ok\"]=false;\r\n     esito_mail[\"errore\"]=\"Indirizzo email già registrato\";\r\n     return esito_mail;\r\n    }\r\n\r\n    return esito_mail;\r\n  }\r\n\r\n  const sintassiEmail = (email) => {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  const getUserObjectByEmail = (email_str) => {\r\n    return JSON.parse(localStorage.getItem(email_str));\r\n  }\r\n\r\n  const checkDataNascita = (dt_nascita_str) =>{\r\n    let esito_dtn = [];\r\n    esito_dtn[\"ok\"]=true;\r\n    esito_dtn[\"errore\"]=\"\";\r\n    //Controllo che sia del formato giusto\r\n    let esito_validate_date = validatedate(dt_nascita_str);\r\n    if(!esito_validate_date[\"ok\"]){\r\n      esito_dtn[\"ok\"]=false;\r\n      esito_dtn[\"errore\"]=esito_validate_date[\"errore\"];\r\n      return esito_dtn;\r\n    }\r\n    //Controllo che sia maggiorenne\r\n    if(etaByDate(dt_nascita_str) < 18){\r\n      esito_dtn[\"ok\"]=false;\r\n      esito_dtn[\"errore\"]=\"Non è possibile registrare un utente minorenne\";\r\n      return esito_dtn;\r\n    }\r\n    return esito_dtn;\r\n  }\r\n\r\n  const validatedate = (data_str) =>{\r\n    let esito_validate = [];\r\n    esito_validate[\"ok\"] = true;\r\n    esito_validate[\"errore\"] = \"\";\r\n\r\n\r\n    let data_ita = data_str.split('/');\r\n    let data_db = data_str.split('-');\r\n    let esito_coerenza = null;\r\n    if (data_ita.length>1){\r\n      esito_coerenza = coerenzaData(data_ita[0],data_ita[1],data_ita[2]);\r\n    }else if (data_db.length>1){\r\n      esito_coerenza = coerenzaData(data_db[2],data_db[1],data_db[0]);\r\n    }else{\r\n      esito_validate[\"ok\"]=false;\r\n      esito_validate[\"errore\"] = \"Data inserita in un formato non valido (es. data corretta: 01/01/2020)\";\r\n      return esito_validate;\r\n    }\r\n\r\n    if(!esito_coerenza[\"ok\"]){\r\n      esito_validate[\"ok\"] = esito_coerenza[\"ok\"];\r\n      esito_validate[\"errore\"] = esito_coerenza[\"errore\"];\r\n    }\r\n\r\n    return esito_validate;\r\n\r\n\r\n  }\r\n\r\n  const coerenzaData = (giorno,mese,anno) => {\r\n    let esito_coerenza_dt = [];\r\n    esito_coerenza_dt[\"ok\"]=true;\r\n    esito_coerenza_dt[\"errore\"]=\"\";\r\n    //Controllo che giorno, mese ed anno siano di lunghezze e valori accettabili\r\n    if(giorno.toString().length !== 2 || parseInt(giorno) > 31 || parseInt(giorno) < 1){\r\n      esito_coerenza_dt[\"ok\"]=false;\r\n      esito_coerenza_dt[\"errore\"]=\"Il giorno inserito non è possibile\";\r\n      return esito_coerenza_dt;\r\n    }else if (mese.toString().length !== 2 || parseInt(mese) > 12 || parseInt(mese) < 1) {\r\n      esito_coerenza_dt[\"ok\"]=false;\r\n      esito_coerenza_dt[\"errore\"]=\"Il mesi inserito non è possibile\";\r\n      return esito_coerenza_dt;\r\n    }else if(anno.toString().length !== 4 || parseInt(anno) === 0 || parseInt(anno) < 1850 ){\r\n      esito_coerenza_dt[\"ok\"]=false;\r\n      esito_coerenza_dt[\"errore\"]=\"L'anno inserito non è possibile\";\r\n      return esito_coerenza_dt;\r\n    }\r\n    //Controllo che non inseriscano giorni di nascita impossibili, ad esempio 31 Giugno 20xx\r\n    if(parseInt(new Date(anno, mese, 0).getDate()) < parseInt(giorno)){\r\n      esito_coerenza_dt[\"ok\"]=false;\r\n      esito_coerenza_dt[\"errore\"]=\"Il giorno inserito non è possibile per il mese dell'anno inserito \";\r\n      return esito_coerenza_dt;\r\n    }\r\n    return esito_coerenza_dt;\r\n  }\r\n\r\n  const etaByDate = (data_nascita) => {\r\n      let oggi = new Date();\r\n      let dataNascita = new Date(data_nascita);\r\n      let eta = oggi.getFullYear() - dataNascita.getFullYear();\r\n      var m = oggi.getMonth() - dataNascita.getMonth();\r\n      if (m < 0 || (m === 0 && oggi.getDate() < dataNascita.getDate())) {\r\n          eta--;\r\n      }\r\n      return eta;\r\n  }\r\n\r\n  const inserisciUtente = (data) =>{\r\n    //Salvo i dati nome e cognome nel formato Cognome Nome\r\n    data.cognome = beautifyName(data.cognome);\r\n    data.nome = beautifyName(data.nome);\r\n    //Salvo le date nel formato yyyy-mm-dd, convertendole se necessario\r\n    let data_tmp = data.data_nascita.split('/');\r\n    data.data_nascita = data_tmp.length>1 ? data_tmp[2]+\"-\"+data_tmp[1]+\"-\"+data_tmp[0] : data.data_nascita;\r\n    //Salvo tutto nello storage e poi ricarico la pagina\r\n    localStorage.setItem(data.email, JSON.stringify(data));\r\n    window.location.reload();\r\n  }\r\n\r\n  const beautifyName = (str) => {\r\n    //Vedo se è un nome/cognome fatto di più parole\r\n    let array_str = str.split(' ');\r\n    if(array_str.length > 1){\r\n      let arr_str_beauty = [];\r\n      array_str.forEach(function (str_tmp) {\r\n        arr_str_beauty.push(str_tmp.charAt(0).toUpperCase() + str_tmp.slice(1).toLowerCase())\r\n      });\r\n      return arr_str_beauty.join(' ');\r\n    }else{\r\n      return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"div_form_utenti\">\r\n      <span className=\"add_utente\" >Aggiungi utente</span>\r\n      <form className=\"form-inline form_utenti\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group campi_form_utenti\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Cognome</span>\r\n          </div>\r\n          <input required autoFocus type=\"text\" className=\"form-control testo_form\" id=\"cognome\" name=\"cognome\" aria-label=\"Cognome\" ref={register} />\r\n        </div>\r\n        <div className=\"form-group campi_form_utenti\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Nome</span>\r\n          </div>\r\n          <input required type=\"text\" className=\"form-control testo_form\" id=\"nome\" name=\"nome\" aria-label=\"Nome\" ref={register} />\r\n        </div>\r\n        <div className=\"input-group campi_form_utenti\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Data di nascita</span>\r\n          </div>\r\n          <input required type=\"date\" className=\"form-control testo_form\" placeholder=\"gg/mm/aaaa\" id=\"data_nascita\" name=\"data_nascita\" aria-label=\"Data di nascita\"  ref={register} />\r\n        </div>\r\n        <div className=\"form-group campi_form_utenti\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">E-mail</span>\r\n          </div>\r\n          <input required type=\"email\" className=\"form-control testo_form\" id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" aria-label=\"E-mail\" ref={register} />\r\n        </div>\r\n        <div className=\"form-group campi_form_utenti\">\r\n          <button  type=\"submit\" className=\"btn btn-primary\" >SALVA</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Table.css';\r\nimport { format } from \"date-fns\";\r\nimport InlineConfirmButton from \"react-inline-confirm\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\n\r\nexport default class Table extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      //Popolo l'array_utenti, prendendo dati dal localStorage da utilizzare come come stato iniziale della tabella\r\n      let array_utenti = [];\r\n      Object.keys(localStorage).forEach(function(key){\r\n         var item =JSON.parse(localStorage.getItem(key));\r\n         array_utenti.push(item);\r\n      });\r\n      this.state = { utenti: array_utenti, cs_cognome:'desc', cs_nome:'desc', cs_data_nascita:'desc', cs_email:'desc' };\r\n      this.onSort = this.onSort.bind(this);\r\n   }\r\n   onSort(event, ordinaPer){\r\n      const data = this.state.utenti;\r\n      switch (ordinaPer) {\r\n        case \"cognome\":\r\n          if(this.state.cs_cognome === 'asc'){\r\n            data.sort((a,b) => a[ordinaPer].localeCompare(b[ordinaPer]));\r\n          }else{\r\n            data.sort((a,b) => b[ordinaPer].localeCompare(a[ordinaPer]));\r\n          }\r\n          this.setState({utenti:data, cs_cognome: this.state.cs_cognome === 'desc' ? 'asc':'desc'});\r\n          break;\r\n        case \"nome\":\r\n          if(this.state.cs_nome === 'asc'){\r\n            data.sort((a,b) => a[ordinaPer].localeCompare(b[ordinaPer]));\r\n          }else{\r\n            data.sort((a,b) => b[ordinaPer].localeCompare(a[ordinaPer]));\r\n          }\r\n          this.setState({utenti:data, cs_nome: this.state.cs_nome === 'desc' ? 'asc':'desc'});\r\n          break;\r\n        case \"data_nascita\":\r\n          if(this.state.cs_data_nascita === 'asc'){\r\n            data.sort((a,b) => a[ordinaPer].localeCompare(b[ordinaPer]));\r\n          }else{\r\n            data.sort((a,b) => b[ordinaPer].localeCompare(a[ordinaPer]));\r\n          }\r\n          this.setState({utenti:data, cs_data_nascita: this.state.cs_data_nascita === 'desc' ? 'asc':'desc'});\r\n          break;\r\n        case \"email\":\r\n          if(this.state.cs_email === 'asc'){\r\n            data.sort((a,b) => a[ordinaPer].localeCompare(b[ordinaPer]));\r\n          }else{\r\n            data.sort((a,b) => b[ordinaPer].localeCompare(a[ordinaPer]));\r\n          }\r\n          this.setState({utenti:data, cs_email: this.state.cs_email === 'desc' ? 'asc':'desc'});\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n   }\r\n   creaHeader() {\r\n      return (\r\n        <tr >\r\n           <th className=\"pointer utenti_th tabella\" onClick={e => this.onSort(e, 'cognome')}>Cognome</th>\r\n           <th className=\"pointer utenti_th tabella\" onClick={e => this.onSort(e, 'nome')}>Nome</th>\r\n           <th className=\"pointer utenti_th tabella\" onClick={e => this.onSort(e, 'data_nascita')}>Data di nascita</th>\r\n           <th className=\"pointer utenti_th tabella\" onClick={e => this.onSort(e, 'email')}>E-mail</th>\r\n           <th className=\"utenti_th\">Totale utenti: {this.getNumeroUtenti()}</th>\r\n        </tr>\r\n      );\r\n   }\r\n   gestisciRimozione(email_str){\r\n    this.rimuoviUtenteByMail(email_str);\r\n   }\r\n   rimuoviUtenteByMail(email_str){\r\n     //Rimuovo dallo storage l'utente con quella email\r\n     Object.keys(localStorage).forEach(function(key){\r\n        var item =JSON.parse(localStorage.getItem(key));\r\n        if(item.email===email_str){\r\n          localStorage.removeItem(email_str);\r\n        }\r\n     });\r\n     window.location.reload();\r\n   }\r\n   getNumeroUtenti(){\r\n     let numero_utenti=0;\r\n     Object.keys(localStorage).forEach(function(key){\r\n        numero_utenti++;\r\n     });\r\n     return numero_utenti;\r\n   }\r\n   creaRighe() {\r\n      return this.state.utenti.map((utente, index) => {\r\n         const { cognome, nome, data_nascita, email } = utente;\r\n         const textValues = [\"Rimuovi utente\", \"Confermare?\", \"Sto cancellando...\"];\r\n         let data_nascita_visualizzata = format(new Date(data_nascita),\"dd/MM/yyyy\");\r\n         let cognome_visualizzato = cognome.length > 38 ? cognome.substring(0, 35)+\"...\" : cognome;\r\n         let nome_visualizzato = nome.length > 38 ? nome.substring(0, 35)+\"...\" : nome;\r\n         return (\r\n            <tr key={email} className=\"righe_tabella\">\r\n               <td alt={cognome} title={cognome} className=\"tabella\">{cognome_visualizzato}</td>\r\n               <td alt={nome} title={nome} className=\"tabella\">{nome_visualizzato}</td>\r\n               <td className=\"tabella\">{data_nascita_visualizzata}</td>\r\n               <td alt={email} title={email} className=\"tabella\">{email}</td>\r\n               <td className=\"tabella\"><InlineConfirmButton className=\"btn btn-default pulsanteCancella\" textValues={textValues} isExecuting={true} showTimer onClick={() => this.gestisciRimozione(email)}>\r\n              \t</InlineConfirmButton></td>\r\n            </tr>\r\n         )\r\n      })\r\n   }\r\n   render() {\r\n      return (\r\n         <div id=\"container_table\">\r\n          <TableScrollbar rows={13} >\r\n            <table id='utenti'>\r\n               <thead>\r\n                  {this.creaHeader()}\r\n               </thead>\r\n               <tbody>\r\n                  {this.creaRighe()}\r\n               </tbody>\r\n            </table>\r\n          </TableScrollbar>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Header from './Componenti/Header';\nimport Form from './Componenti/Form';\nimport Table from './Componenti/Table';\nimport { Provider as AlertProvider } from 'react-alert';\n//import AlertTemplate from 'react-alert-template-basic';\n\n\nconst options = {\n  position: 'top right',\n  timeout: 6000,\n  offset: '30px',\n  transition: 'fade'\n};\n\nconst AlertTemplate = ({ style, options, message, close }) => (\n  <div style={style}>\n    {message}\n  </div>\n)\n\nReactDOM.render(\n  <AlertProvider template={AlertTemplate} {...options}>\n    <React.StrictMode>\n        <Header />\n        <Form />\n        <Table />\n    </React.StrictMode>\n  </AlertProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}